"use strict";var precacheConfig=[["/webvr-talk/index.html","217a38dddc6547a1e191dcef37368dd3"],["/webvr-talk/static/css/main.fd4e9038.css","a4abf84b13f63fe211bc33f3986b03e8"],["/webvr-talk/static/js/main.383cde14.js","cb07ea9c1900ba67c63d96fee3b455d0"],["/webvr-talk/static/media/ecs.5016bc84.png","5016bc844979e9463b43a56c98f94d28"],["/webvr-talk/static/media/html.031b25e2.png","031b25e2a80d7df527af16e07b460379"],["/webvr-talk/static/media/lights-out.6db0307f.png","6db0307fd4852fe9de45abc8c993d86d"],["/webvr-talk/static/media/linus.f7721737.png","f77217374f6dc954bfa6c8269ebf156a"],["/webvr-talk/static/media/pointless-logo.a77f6513.svg","a77f6513c0df336a022208f4a29071ef"],["/webvr-talk/static/media/pointless.74a44f0a.png","74a44f0a35e792ff00170eef1e51c3c9"],["/webvr-talk/static/media/preact.34bd122d.svg","34bd122d77b8bb5c46f7b80f0b05312b"],["/webvr-talk/static/media/preactCode.f8b962c6.png","f8b962c6687c7042bd61cb92f33ab8a5"],["/webvr-talk/static/media/progressive.45215dbb.png","45215dbb7db7932497fb4995c3e70072"],["/webvr-talk/static/media/react-aframe.b0a3a4a7.svg","b0a3a4a71d91e03c18df703d0c9a2b76"],["/webvr-talk/static/media/react-code.f56c14a8.png","f56c14a8b26f4c3899cb4fa7262eb039"],["/webvr-talk/static/media/react.cba0b89d.png","cba0b89d2bf2d96a1ed26edb5849f804"],["/webvr-talk/static/media/tutorial.60d91fdd.png","60d91fdd375652e3daf3787477d9fca3"],["/webvr-talk/static/media/vigeverse.e05d97bf.jpg","e05d97bf2a3e684f6bd13188eedc5ba9"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/webvr-talk/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});